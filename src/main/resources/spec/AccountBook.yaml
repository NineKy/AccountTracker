openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Account Book'
  description: 'account book api document'
servers:
  - url: http://localhost:8080
tags:
  - name: "Util"
    description: "Utility API"
  - name: "User"
    description: "User API"

paths:
  /check/working:
    get:
      tags:
        - "Util"
      summary: "check yaml working"
      description: "check yaml working"
      operationId: checkYaml
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSuccessDto'
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /user:
    post:
      tags:
        - "User"
      summary: "create user"
      description: "create user"
      operationId: createUser
      requestBody:
        description: "create user request"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDto'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponseDto'
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /user/{userId}/info:
    get:
      tags:
        - "User"
      summary: "get user"
      description: "find user"
      operationId: getUser
      parameters:
        - name: "userId"
          in: "path"
          description: "user id"
          required: true
          schema:
            type: "string"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponseDto'
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

components:
  schemas:
    CheckSuccessDto:
      type: object
      properties:
        success:
          type: boolean
          description: "check success"
          example: true
    CreateUserRequestDto:
      type: object
      properties:
        id:
          type: string
          nullable: false
          description: "user login id(String)"
          example: "loginId"
        name:
          type: string
          nullable: false
          description: "user name"
          example: "kdshim"
        password:
          type: string
          nullable: false
          description: "user password"
          example: "qwer1234"

    CreateUserResponseDto:
      type: object
      properties:
        id:
          type: string
          description: "user login id(String)"
          example: "loginId"
        name:
          type: string
          description: "user name"
          example: "kdshim"
        password:
          type: string
          description: "user password"
          example: "qwer1234"
        createdAt:
          type: string
          description: "user create date(yyyymmddHHmmss)"
          example: "20230124013000"
        updatedAt:
          type: string
          description: "user update date(yyyymmddHHmmss)"
          example: "20230124013000"

    GetUserResponseDto:
      type: object
      properties:
        id:
          type: string
          description: "user login id(String)"
          example: "loginId"
        name:
          type: string
          description: "user name"
          example: "kdshim"
        password:
          type: string
          description: "user password"
          example: "qwer1234"
        createdAt:
          type: string
          description: "user create date(yyyymmddHHmmss)"
          example: "20230129011000"
        updatedAt:
          type: string
          description: "user update date(yyyymmddHHmmss)"
          example: "20230129011000"

    ErrorResponseDto:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

